const { asyncHandler } = require('../../utilities/asyncHandler');
const {
  getMongodbModels,
} = require('../../databases/tenant.mongodb.connection');
const { ApiResponse } = require('../../utilities/ApiResponse');
const { ApiError } = require('../../utilities/ApiError');


// admin create a services
const createAdminServices = asyncHandler(async function (req, res) {

  const serviceNames = req.body.services;

  let modules = [];

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[2];

  if (serviceNames.length === 0) {
    return res.json(new ApiError(400, 'SELCT AT LEAT ONE', 'services'));
  }

  /* Fetch the MongoDB model for the tenant-user-user */
  const getMongodbModel = await getMongodbModels('ADMIN-DB', subModule);

  await serviceNames.forEach(async (serviceName) => {
    const tenantServiceInstance = new getMongodbModel({
      serviceName: serviceName,
      modules: modules,
    });

    await tenantServiceInstance.save();
  });

  /* Return a JSON response with a success message */
  return res.json(new ApiResponse(200, null));
});


// admin get a services
const getAdminServices = asyncHandler(async function (req, res) {

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[2];

  /* Fetch the MongoDB model for the tenant-user-user */
  const getMongodbModel = await getMongodbModels('ADMIN-DB', subModule);

  /* Fetch the latest document from the customer collection*/
  const getObj = await getMongodbModel.find({});

  /* Return a JSON response with the latest document and the total number of documents*/
  return res.json(new ApiResponse(200, getObj));
});


// admin update  a services
const updateModuleAdminServices = asyncHandler(async function (req, res) {

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[2];

  /* Fetch the MongoDB model for the tenant-user-user */
  const TenantServiceModel = await getMongodbModels('ADMIN-DB', subModule);

  let getTenantServices = await TenantServiceModel.findOne({
    serviceName: req.body.serviceName,
  });

  if (getTenantServices === null) {
    return res.json(new ApiError(400, 'SERVICE NOT FOUND ', 'serviceName'));
  }
  if (req.body.modules.length === 0) {
    return res.json(new ApiError(400, 'CREATE AT LEAT ONE MODULE', 'modules'));
  }

  const updateData = await TenantServiceModel.findOneAndUpdate(
    { serviceName: req.body.serviceName },
    { $set: { modules: req.body.modules } }, // Use $set to update specific fields
    { new: true } // Return the updated document
  );

  /* Return a JSON response with a success message */
  return res.json(new ApiResponse(200, updateData));
});


const createDefaulterServices = asyncHandler(async function (req, res) {

 let reqData =  [
    {
      key: 'invoice_id',
      type: 'string',
      relation: 'no',
      isArray: false,
      primarykey: true,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 'text',
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: true,
      min: 0,
      max: 0,
      sign: false,
      unsign: false,
      float: false,
      int: false,
      floor: false,
      celling: false,
      steps: 0,
      indexes: true,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: 'BTREE',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation: '',
      arrayWithCalculation: '',
    },
    {
      key: 'invoicenumber',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 1,
      max: 1000,
      sign: false,
      unsign: false,
      float: false,
      int: false,
      floor: false,
      celling: false,
      steps: 0,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation: '',
      arrayWithCalculation: '',
    },
    {
      key: 'invoicedate',
      type: 'date',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: '2024-01-09',
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 0,
      max: 0,
      sign: false,
      unsign: false,
      float: false,
      int: false,
      floor: false,
      celling: false,
      steps: 0,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: 'utcDate',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation: '',
      arrayWithCalculation: '',
    },
    {
      key: 'productdetails',
      value: [
        {
          key: 'productname',
          type: 'string',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 'text',
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 0,
          max: 0,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
        {
          key: 'productquantity',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 1000,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
        {
          key: 'productrate',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 10000,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
        {
          key: 'productdiscount',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 10000,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
        {
          key: 'productdiscountamount',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 10000,
          sign: false,
          unsign: false,
          float: true,
          int: false,
          floor: false,
          celling: true,
          steps: 2,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation:
            '(productdetails.productquantity * productdetails.productrate) * productdetails.productdiscount / 100',
          arrayWithCalculation: '',
        },
        {
          key: 'productamount',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 'xyz@gmail.com',
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 10000,
          sign: false,
          unsign: false,
          float: true,
          int: false,
          floor: false,
          celling: true,
          steps: 2,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation:
            'productdetails.productquantity * productdetails.productrate-((productdetails.productquantity * productdetails.productrate)*productdetails.productdiscount/100)',
          arrayWithCalculation: '',
        },
        {
          key: 'CGST',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 1000,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
        {
          key: 'SGST',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 1,
          max: 10000,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
        {
          key: 'IGST',
          type: 'number',
          relation: 'array',
          belong: 'New Array',
          isArray: false,
          primarykey: false,
          fkey: false,
          ckey: false,
          uppercase: false,
          default: 0,
          required: true,
          enum: false,
          enumValues: [
            'BANK OF INDIA',
            'STATE BANK',
            'PUNJAB BANK',
            'ICICI BANK',
          ],
          minlength: '1',
          maxlength: '100',
          boolean: true,
          autoIncrement: false,
          lowercase: false,
          trim: false,
          unique: false,
          min: 0,
          max: 10000,
          sign: false,
          unsign: false,
          float: false,
          int: false,
          floor: false,
          celling: false,
          steps: 0,
          indexes: false,
          hasFeilds: 'new',
          dateToFormat: '',
          indexType: '',
          moduleName: '',
          subModuleName: '',
          primaryKey2: '',
          operation: '',
          calculation: '',
          arrayWithCalculation: '',
        },
      ],
      type: 'array',
      relation: 'array',
      belong: 'New Array',
      isArray: true,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 'NA',
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 0,
      max: 0,
      sign: false,
      unsign: false,
      float: false,
      int: false,
      floor: false,
      celling: false,
      steps: 0,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation: '',
      arrayWithCalculation: '',
    },
    {
      key: 'totaldiscountamount',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 1,
      max: 1000,
      sign: false,
      unsign: false,
      float: true,
      int: false,
      floor: false,
      celling: true,
      steps: 2,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation:
        'productdetails.reduce((total, product) => total + (product.productquantity * product.productrate * product.productdiscount / 100), 0)',
      arrayWithCalculation: 'productdetails',
    },
    {
      key: 'totalCGST',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 1,
      max: 1000,
      sign: false,
      unsign: false,
      float: true,
      int: false,
      floor: false,
      celling: true,
      steps: 2,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation:
        'productdetails.reduce((total, product) => total + (((product.productquantity * product.productrate)-product.productdiscount) * product.CGST / 100), 0)',
      arrayWithCalculation: 'productdetails',
    },
    {
      key: 'totalSGST',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 1,
      max: 1000,
      sign: false,
      unsign: false,
      float: true,
      int: false,
      floor: false,
      celling: true,
      steps: 2,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation:
        'productdetails.reduce((total, product) => total + (((product.productquantity * product.productrate)-product.productdiscount) * product.SGST / 100), 0)',
      arrayWithCalculation: 'productdetails',
    },
    {
      key: 'totalIGST',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 0,
      max: 1000,
      sign: false,
      unsign: false,
      float: true,
      int: false,
      floor: false,
      celling: true,
      steps: 2,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation:
        'productdetails.reduce((total, product) => total + (((product.productquantity * product.productrate)-product.productdiscount) * product.IGST / 100), 0)',
      arrayWithCalculation: 'productdetails',
    },
    {
      key: 'totalproductamount',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 1,
      max: 1000,
      sign: false,
      unsign: false,
      float: true,
      int: false,
      floor: false,
      celling: true,
      steps: 2,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation:
        'productdetails.reduce((total, product) => total + product.productamount, 0)',
      arrayWithCalculation: 'productdetails',
    },
    {
      key: 'totalinvoiceamount',
      type: 'number',
      relation: 'no',
      isArray: false,
      primarykey: false,
      fkey: false,
      ckey: false,
      uppercase: false,
      default: 0,
      required: true,
      enum: false,
      enumValues: ['BANK OF INDIA', 'STATE BANK', 'PUNJAB BANK', 'ICICI BANK'],
      minlength: '1',
      maxlength: '100',
      boolean: true,
      autoIncrement: false,
      lowercase: false,
      trim: false,
      unique: false,
      min: 1,
      max: 1000,
      sign: false,
      unsign: false,
      float: true,
      int: false,
      floor: false,
      celling: true,
      steps: 2,
      indexes: false,
      hasFeilds: 'new',
      dateToFormat: '',
      indexType: '',
      moduleName: '',
      subModuleName: '',
      primaryKey2: '',
      operation: '',
      calculation:
        'productdetails.reduce((total, product) => total + product.productamount, 0) + productdetails.reduce((total, product) => total + (((product.productquantity * product.productrate)-product.productdiscount) * product.SGST / 100), 0) + productdetails.reduce((total, product) => total + (((product.productquantity * product.productrate)-product.productdiscount) * product.CGST / 100), 0) + productdetails.reduce((total, product) => total + (((product.productquantity * product.productrate)-product.productdiscount) * product.IGST / 100), 0)',
      arrayWithCalculation: 'productdetails',
    },
  ];

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[3];

  /* Fetch the MongoDB model for the tenant-user-user */
  const getMongodbModel = await getMongodbModels('ADMIN-DB', subModule);

  /* Use the MongoDB customerModel to create a new document with the generatedSchema */
  await getMongodbModel.create(reqData);

  /* Return a JSON response with a success message */
  return res.json(new ApiResponse(200, null));
});

const getDefaulterServices = asyncHandler(async function (req, res) {

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[3];

  /* Fetch the MongoDB model for the tenant-user-user */
  const getMongodbModel = await getMongodbModels('ADMIN-DB', subModule);

  /* Fetch the latest document from the customer collection*/
  const getObj = await getMongodbModel.find()

  /* Return a JSON response with the latest document and the total number of documents*/
  return res.json(new ApiResponse(200, getObj));
});

const createDefaulterData = asyncHandler(async function (req, res) {

  let reqData = req.body;

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[3];

  /* Fetch the MongoDB model for the tenant-user-user */
  const getMongodbModel = await getMongodbModels('ADMIN-DB', subModule);

  /* Use the MongoDB customerModel to create a new document with the generatedSchema */
  await getMongodbModel.create(reqData);

  /* Return a JSON response with a success message */
  return res.json(new ApiResponse(200, null));
});

const getDefaulterData = asyncHandler(async function (req, res) {

  /* Extract the common part of the URL (assuming it contains the schema name)*/
  const subModule = req.originalUrl.split('/')[3];

  /* Fetch the MongoDB model for the tenant-user-user */
  const getMongodbModel = await getMongodbModels('ADMIN-DB', subModule);

  /* Fetch the latest document from the customer collection*/
  const getObj = await getMongodbModel.findOne({}).sort({ _id: -1 }).limit(1);

  /* Return a JSON response with the latest document and the total number of documents*/
  return res.json(new ApiResponse(200, getObj));
});

module.exports = {
  createAdminServices,
  getAdminServices,
  updateModuleAdminServices,
  createDefaulterServices,
  getDefaulterServices,
  createDefaulterData,
  getDefaulterData
};
